{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterSlice from './counter';\nimport AuthSlice from './auth';\n/*const counterReducer = (state = initialState, action) => {\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'increase') {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        }\r\n    }\r\n    return state;\r\n}*/\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: AuthSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = AuthSlice.actions;\nexport default store;\n/*\r\nconst counterSubscriber = () => {\r\n    const lateststate = store.getState()\r\n    console.log(lateststate)\r\n}\r\n\r\nstore.subscribe(counterSubscriber);\r\nstore.dispatch({ type: 'increase' })*/","map":{"version":3,"names":["configureStore","counterSlice","AuthSlice","store","reducer","counter","auth","counterActions","actions","authActions"],"sources":["C:/Users/rbxo1/OneDrive/문서/github/Redux-Study/01-starting-project (2)/01-starting-project/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport counterSlice from './counter';\r\nimport AuthSlice from './auth';\r\n\r\n\r\n/*const counterReducer = (state = initialState, action) => {\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'increase') {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        }\r\n    }\r\n    return state;\r\n}*/\r\n\r\nconst store = configureStore({\r\n    reducer: { counter: counterSlice.reducer, auth: AuthSlice.reducer }\r\n});\r\n\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = AuthSlice.actions;\r\nexport default store;\r\n\r\n/*\r\nconst counterSubscriber = () => {\r\n    const lateststate = store.getState()\r\n    console.log(lateststate)\r\n}\r\n\r\nstore.subscribe(counterSubscriber);\r\nstore.dispatch({ type: 'increase' })*/"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,SAAP,MAAsB,QAAtB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EACzBI,OAAO,EAAE;IAAEC,OAAO,EAAEJ,YAAY,CAACG,OAAxB;IAAiCE,IAAI,EAAEJ,SAAS,CAACE;EAAjD;AADgB,CAAD,CAA5B;AAKA,OAAO,MAAMG,cAAc,GAAGN,YAAY,CAACO,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGP,SAAS,CAACM,OAA9B;AACP,eAAeL,KAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}